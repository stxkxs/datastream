services:
  tempo:
    image: grafana/tempo
    extra_hosts: ['host.docker.internal:host-gateway']
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    ports:
      - "4318:4318"
      - "9411:9411"
  loki:
    image: grafana/loki
    extra_hosts: ['host.docker.internal:host-gateway']
    command: ["-config.file=/etc/loki/local-config.yaml"]
    ports:
      - "3100:3100"
  prometheus:
    image: prom/prometheus
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
  kafka:
    image: bitnami/kafka:3.6
    ports:
    - "9092:9092"
    - "29092:29092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:29092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
    volumes:
    - "kafka_data:/bitnami"
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
    - "8080:8080"
    environment:
      KAFKA_URL: http://kafka:9092
      LOKI_ENDPOINT: http://loki:3100
      OTLP_HTTP_ENDPOINT: http://tempo:4318
      OTLP_ZIPKIN_ENDPOINT: http://tempo:9411
      WIKIMEDIA_API_USER_AGENT: 1:1s/create-kafka-datasource/localhost; <you@email.com>
    depends_on:
    - loki
    - tempo
    - prometheus
    - grafana
    - kafka

volumes:
  kafka_data:
    driver: local
